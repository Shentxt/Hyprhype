;;-------------------[Widgets]------------------------------

(defwidget bar []
    (box :class "bar-widget" :orientation "h" :space-evenly true

        (box :orientation "h" :space-evenly false :halign "start"
            (logo)
            (workspaces)
        )

        (box :orientation "h" :space-evenly false :halign "center"
            (space)
            (noti)
            (clock)
            (music)
        )

        (box :orientation "h" :space-evenly false :halign "end"
            (tray_button)
            (language)
            (picker)
            (indicator)
        )

    )
    
)

;;-------------------[Logo]------------------------------

(defwidget logo []
    (button 
    :class "logo" 
    :onclick "rofi -show window -theme ~/.config/rofi/themes/windows.rasi &" 
    (label :text distro)
  )
)

;;-------------------[Clock]------------------------------

(defwidget clock []
    (label :class "clock" :text {formattime(EWW_TIME, "%I:%M %p")})
)

;;-------------------[Language]------------------------------

(defwidget language []
    (button 
         :onclick "scripts/switch_kb_layout.sh &"  
         :onrightclick "~/.config/hypr/scripts/mapkeys.sh &"
         :class "language"        
        (label :text {kb_layout}) 
    )
)

;;-------------------[Tray]------------------------------

(defwidget tray []
    (revealer :transition "slideup" :reveal {open_tray} :duration {ANIM_DURATION}
        (box :class "tray_box" :orientation "h" :space-evenly false
            (systray :hexpand true :halign "center" :pack-direction "left")
        )
    )
)

(defwidget tray_button []
  (box
    (button :class "tray_button" :onclick "scripts/toggle_tray.sh --toggle"
    (label :text tray)
   )
 )
)

;;-------------------[Picker]------------------------------

;(defwidget picker []
;   (button :onclick "sleep 0.1 && ~/.config/hypr/scripts/colorpicker.sh &" :class "picker" "󰃉")
;)

;; control center ;;
(defwidget picker []
	(eventbox	
        :onhover "${EWW_CMD} update notify=true"	
				:onhoverlost "${EWW_CMD} update notify=false"
	(box		
        :orientation "h"					
				:space-evenly "false" 	 
				:vexpand "false" 	
				
	(revealer	
        :transition "slideleft"				
				:reveal notify			 
				:duration {ANIM_DURATION}
	(box	:orientation "h"					
				:space-evenly "false"
	(eventbox 	
	(button		
				:onclick "~/.config/hypr/scripts/notes.sh &"
        :class "picker" "󱞁"))
	
	(eventbox 
	(button		
				:onclick "kitty --title 'Float' -e scripts/send.sh &"
        :class "picker" ""))
				
	(eventbox 	
	(button		
				:onclick "kitty --title 'Float' -e scripts/send.sh &"
        :class "picker" "󰐳"))))

	(button										
        :onclick "sleep 0.1 && ~/.config/hypr/scripts/colorpicker.sh &"
        :class "picker" "󰃉" ))))

;;-------------------[Space]------------------------------

(defwidget space []
    (box :class "logo"
    (label :text space)
  )
)

;;-------------------[Workspace]------------------------------

(defwidget workspaces []
   (eventbox :onscroll "scripts/get_active_workspace.sh {} ${current_workspace}"
        (box :orientation "h" :space-evenly false :class "workspaces" :hexpand true
            (for workspace in workspaces
                (button 
                    :class "workspace ${current_workspace == workspace.id ? "current" : ""}" 
                    :onclick "hyprctl dispatch workspace ${workspace.id}" 
                    ""
                )
            )
        )
    )
)

;;-------------------[Music]------------------------------

(defwidget music []
     (eventbox
            :onhover "${EWW_CMD} update mu=true"	
            :onhoverlost "${EWW_CMD} update mu=false"
            :visible {playingorpaused != "NoTrack"}    
  (box :orientation "h"					
         :space-evenly "false" 	 
         :vexpand "false"
    (button 
              :style "background-image: url('${musicartlink}');"
              :class "img"
              :onrightclick "playerctl play-pause"
              :onclick "scripts/toggle_musicontrol.sh &")
     (revealer
                :transition "slideleft"				
                :reveal mu
                :duration {ANIM_DURATION}
        (box :orientation "h"					
             :space-evenly "false"
      ;  (eventbox 			
      ;      (button                     
       ;             :class "button"  
        ;            :onclick "playerctl previous" "󰼨"))
        (label
                    :class "text" 											 
                    :text  {music})
        ;(eventbox 
        ;    (button 
        ;            :class "button"
        ;            :onclick "playerctl next" "󰼧"))
        )
      )
    )
  )
 )

;;-------------------[Notifications]------------------------------

(defwidget noti []
	(eventbox	
        :onhover "${EWW_CMD} update no=true"	
				:onhoverlost "${EWW_CMD} update no=false" 
	(box		
        :orientation "h"					
				:space-evenly "false" 	 
				:vexpand "false" 	
				
	(revealer	
        :transition "slideleft"				
				:reveal no			 
				:duration "${ANIM_DURATION}"
	(box		
        :orientation "h"					
				:space-evenly "false"
				
	(label  	
        :class "text"
				:text "${NOTIFI}")))
	
	(eventbox 
	(button		 
        :onclick "scripts/toggle_notifications.sh --toggle &"
        :class "icon" "")) )))
