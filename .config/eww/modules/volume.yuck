;;-------------------[Volume]------------------------------

(defwidget volume_osd []
    (revealer :transition "slideup" :reveal {open_osd} :duration {ANIM_DURATION}
        (box :orientation "h" :class "volume-osd" :space-evenly false
            (volume_scale)
        )
    )
)

(defwidget volume_scale []
    (overlay :hexpand true
        (scale :min 0 :max 100 :active {volume != "muted"} :value {volume == "muted" ? 0 : volume} :onchange "pamixer --set-volume {}" :class "volume-scale")
        (label :class 'volume-icon ${volume == "muted" ? "less" : volume < 5 ? "less" : "more"}' :halign "start" :text {volume == "muted" ? "󰸈" : volume < 33 ? "" : volume < 67 ? "" : ""})
    )
)

(defwidget volume_control_center []
    (box :orientation "h" :class "volume-control-center" :space-evenly false
        (volume_scale)
        (button :class "volume-mute ${volume == 'muted' ? 'active' : ''}" :onclick "pamixer -t" "󰝟")
        (button :class "volume-arrow" :onclick "scripts/toggle_control_center.sh close && pavucontrol &" "󰅂")
    )
)

;;-------------------[Brighnes]------------------------------

(defwidget brighness_osd []
    (revealer :transition "slideup" :reveal {open_brighness} :duration {ANIM_DURATION}
        (box :orientation "h" :class "volume-osd" :space-evenly false
            (brighness_scale)
        )
    )
)

(defwidget brightness_scale []
    (overlay :hexpand true
        (scale :min 0 :max 100 :value {brightness} :onchange "brightnessctl s {}%" :class "volume-scale")
        (label :class 'volume-icon ${brightness < 33 ? "less" : brightness < 67 ? "medium" : "high"}' :halign "start" :text {brightness < 33 ? "󰃞" : brightness < 67 ? "󰃟" : "󰃠"})
    )
)

(defwidget brightness_control_center []
    (box :orientation "h" :class "volume-control-center" :space-evenly false
    (brightness_scale)
    (button :class "volume-mute ${brightness == 'off' ? 'active' : ''}" :onclick "scripts/toggle_brightness.sh" "󰃞")
    )
)

